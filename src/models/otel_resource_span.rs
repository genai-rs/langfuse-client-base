/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OtelResourceSpan : Represents a collection of spans from a single resource as per OTLP specification
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct OtelResourceSpan {
    #[serde(rename = "resource", skip_serializing_if = "Option::is_none")]
    pub resource: Option<Box<models::OtelResource>>,
    /// Array of scope spans
    #[serde(
        rename = "scopeSpans",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub scope_spans: Option<Option<Vec<models::OtelScopeSpan>>>,
}

impl OtelResourceSpan {
    /// Represents a collection of spans from a single resource as per OTLP specification
    pub fn new() -> OtelResourceSpan {
        OtelResourceSpan {
            resource: None,
            scope_spans: None,
        }
    }
}
