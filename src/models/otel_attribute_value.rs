/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OtelAttributeValue : Attribute value wrapper supporting different value types
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct OtelAttributeValue {
    /// String value
    #[serde(
        rename = "stringValue",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub string_value: Option<Option<String>>,
    /// Integer value
    #[serde(
        rename = "intValue",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub int_value: Option<Option<i32>>,
    /// Double value
    #[serde(
        rename = "doubleValue",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub double_value: Option<Option<f64>>,
    /// Boolean value
    #[serde(
        rename = "boolValue",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub bool_value: Option<Option<bool>>,
}

impl OtelAttributeValue {
    /// Attribute value wrapper supporting different value types
    pub fn new() -> OtelAttributeValue {
        OtelAttributeValue {
            string_value: None,
            int_value: None,
            double_value: None,
            bool_value: None,
        }
    }
}
