name: Skip CI Status Checks

on:
  pull_request:
    types: [labeled, opened, synchronize]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to process'
        required: true
        type: number

jobs:
  bypass-checks:
    name: Mark status checks as successful for skip-ci PRs
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'skip-ci')) ||
      (github.event_name == 'workflow_dispatch')
    
    permissions:
      checks: write
      contents: read
      pull-requests: read
    
    steps:
      - name: Debug - Log event details
        uses: actions/github-script@v7
        with:
          script: |
            console.log('=== DEBUG: Event Information ===');
            console.log('Event name:', context.eventName);
            console.log('Event action:', context.payload.action);
            
            if (context.eventName === 'pull_request') {
              console.log('PR number:', context.payload.pull_request.number);
              console.log('PR labels:', context.payload.pull_request.labels.map(l => l.name));
              console.log('Has skip-ci label:', context.payload.pull_request.labels.some(l => l.name === 'skip-ci'));
              console.log('PR created at:', context.payload.pull_request.created_at);
              console.log('PR updated at:', context.payload.pull_request.updated_at);
            } else if (context.eventName === 'workflow_dispatch') {
              console.log('Manual dispatch for PR:', ${{ github.event.inputs.pr_number || 'undefined' }});
            }
            
            console.log('=== END DEBUG ===');
            
      - name: Get PR information
        id: pr-info
        uses: actions/github-script@v7
        with:
          script: |
            let pr;
            if (context.eventName === 'pull_request') {
              pr = context.payload.pull_request;
            } else {
              // workflow_dispatch
              const prNumber = ${{ github.event.inputs.pr_number || 'context.payload.pull_request.number' }};
              const response = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              pr = response.data;
            }
            
            const hasSkipCi = pr.labels.some(label => label.name === 'skip-ci');
            if (!hasSkipCi) {
              core.setFailed('PR does not have skip-ci label');
              return;
            }
            
            core.setOutput('head_sha', pr.head.sha);
            core.setOutput('pr_number', pr.number);
            
      - name: Create successful check runs
        uses: actions/github-script@v7
        with:
          script: |
            const checkNames = [
              'Build (stable)',
              'Build (beta)', 
              'Build (1.82.0)',
              'Security Audit'
            ];
            
            const headSha = '${{ steps.pr-info.outputs.head_sha }}';
            
            for (const name of checkNames) {
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: name,
                head_sha: headSha,
                status: 'completed',
                conclusion: 'success',
                output: {
                  title: 'Bypassed for skip-ci PR',
                  summary: 'Status check bypassed for skip-ci labeled PR'
                }
              });
            }

  auto-merge-on-approved:
    name: Auto-merge when approved label is added
    runs-on: ubuntu-latest
    if: |
      contains(github.event.pull_request.labels.*.name, 'skip-ci') &&
      contains(github.event.pull_request.labels.*.name, 'approved') &&
      github.event.action == 'labeled' &&
      github.event.label.name == 'approved'
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Auto-merge approved skip-ci PR
        run: |
          # Wait a moment for check runs to be created
          sleep 10
          gh pr merge --rebase "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}