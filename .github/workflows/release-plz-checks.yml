name: Release-plz Status Checks

on:
  pull_request:
    types: [labeled, opened, synchronize]

jobs:
  bypass-checks:
    name: Mark status checks as successful for release-plz PRs
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'release-plz')
    
    permissions:
      checks: write
      contents: read
    
    steps:
      - name: Create successful check runs
        uses: actions/github-script@v7
        with:
          script: |
            const checkNames = [
              'Build (stable)',
              'Build (beta)', 
              'Build (1.82.0)',
              'Security Audit'
            ];
            
            for (const name of checkNames) {
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: name,
                head_sha: context.payload.pull_request.head.sha,
                status: 'completed',
                conclusion: 'success',
                output: {
                  title: 'Bypassed for release-plz PR',
                  summary: 'Status check bypassed for release-plz labeled PR'
                }
              });
            }

  auto-merge-on-approved:
    name: Auto-merge when approved label is added
    runs-on: ubuntu-latest
    if: |
      contains(github.event.pull_request.labels.*.name, 'release-plz') &&
      contains(github.event.pull_request.labels.*.name, 'approved') &&
      github.event.action == 'labeled' &&
      github.event.label.name == 'approved'
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Auto-merge approved release-plz PR
        run: |
          # Wait a moment for check runs to be created
          sleep 10
          gh pr merge --rebase "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}